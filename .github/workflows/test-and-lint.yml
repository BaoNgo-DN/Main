name: Test and Lint

on:
  workflow_call:
    # declare secrets as required
    secrets:
      DOCKERHUB_USER:
        required: true
        description: "Username for DockerHub auth"
      DOCKERHUB_TOKEN:
        required: true
        description: "Token for DockerHub auth"

jobs:
  # job id
  python:
    name: Python
    runs-on: ubuntu-22.04
    # authenticate to docker hub with github action because of docker compose
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        # checkout code: provides the workflow with access to the repository's code
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        run: docker compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test"
        # run unit test for python
      - name: Python flake8
        run: docker compose run --rm app sh -c "flake8"
        # run lint tool called flake8

# authenticate to docker hub > checkout code > run unit test for python > run lint tool called flake8

  terraform:
    name: Terraform
    runs-on: ubuntu-22.04
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Terraform lint
        run: |
          cd infra/
          docker compose run --rm terraform -chdir=deploy/ init -backend=false
          docker compose run --rm terraform -chdir=setup/ init -backend=false
          docker compose run --rm terraform -chdir=setup/ validate
          docker compose run --rm terraform -chdir=setup/ fmt -check
          docker compose run --rm terraform -chdir=deploy/ validate
          docker compose run --rm terraform -chdir=deploy/ fmt -check

# login to docker hub > check out  > test terraform code      
# -bankend=false disables the backend initialization, meaning won't connect to a remote backend like S3 or Terraform Cloud, 
# which is commonly used to store the state file. 
# This might be used to perform a dry-run initialization or to test locally.
# fmt - check: ensures the command doesn't actually format the files 
# but instead returns an exit code if the files aren't formatted correctly.
